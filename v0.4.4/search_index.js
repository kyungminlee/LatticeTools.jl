var documenterSearchIndex = {"docs":
[{"location":"#TightBindingLattice-1","page":"TightBindingLattice","title":"TightBindingLattice","text":"","category":"section"},{"location":"#","page":"TightBindingLattice","title":"TightBindingLattice","text":"Lattice.","category":"page"},{"location":"#","page":"TightBindingLattice","title":"TightBindingLattice","text":"Group has group structure. Examples are FiniteAbelianGroup, GenericGroup","category":"page"},{"location":"#","page":"TightBindingLattice","title":"TightBindingLattice","text":"Multiplication table\norder (period length) of every element","category":"page"},{"location":"#","page":"TightBindingLattice","title":"TightBindingLattice","text":"Symmetry is the \"presentation\" of group.","category":"page"},{"location":"#","page":"TightBindingLattice","title":"TightBindingLattice","text":"Symmetry on the other hand, is a representation of the group structure in some space. Examples are: TranslationSymmetry, PointSymmetry. Members are","category":"page"},{"location":"#","page":"TightBindingLattice","title":"TightBindingLattice","text":"group\ngenerators\nconjugacy_classes\ncharacter_table\nirreps\nelement names","category":"page"},{"location":"#","page":"TightBindingLattice","title":"TightBindingLattice","text":"PointSymmetry has additional info","category":"page"},{"location":"#","page":"TightBindingLattice","title":"TightBindingLattice","text":"matrix_representations (i.e. representation in units of lattice vectors)\nSchoenflies\nHermann Mauguinn","category":"page"},{"location":"#","page":"TightBindingLattice","title":"TightBindingLattice","text":"Modules = [TightBindingLattice]","category":"page"},{"location":"#TightBindingLattice.CarteCoord","page":"TightBindingLattice","title":"TightBindingLattice.CarteCoord","text":"CarteCoord\n\nCartesian coordinates. Vector{Float64}.\n\n\n\n\n\n","category":"type"},{"location":"#TightBindingLattice.FractCoord","page":"TightBindingLattice","title":"TightBindingLattice.FractCoord","text":"FractCoord\n\nFractional coordinates.\n\nMembers\n\nwhole ::Vector{Int}: Integer part of fractional coordinates\nfraction ::Vector{Float64}: [0,1) part of fractional coordinates\n\n\n\n\n\n","category":"type"},{"location":"#TightBindingLattice.IdentityOperation","page":"TightBindingLattice","title":"TightBindingLattice.IdentityOperation","text":"IdentityOperation{S<:Real}\n\n\n\n\n\n","category":"type"},{"location":"#TightBindingLattice.Permutation","page":"TightBindingLattice","title":"TightBindingLattice.Permutation","text":"    Permutation(perms; max_order=2048)\n\nCreate a permutation of integers from 1 to n. perms should be a permutation of 1:n.\n\nArguments\n\nperms: an integer vector containing a permutation of integers from 1 to n\nmax_order: maximum order\n\nNote\n\nThe convention for the permutation is that map[i] gets mapped to i. In other words, map tells you where each element is from.\n\n\n\n\n\n","category":"type"},{"location":"#TightBindingLattice.PointOperation","page":"TightBindingLattice","title":"TightBindingLattice.PointOperation","text":"PointOperation{S<:Real}\n\n\n\n\n\n","category":"type"},{"location":"#TightBindingLattice.PointSymmetry","page":"TightBindingLattice","title":"TightBindingLattice.PointSymmetry","text":"PointSymmetry\n\n\n\n\n\n","category":"type"},{"location":"#TightBindingLattice.SitePermutation","page":"TightBindingLattice","title":"TightBindingLattice.SitePermutation","text":"SitePermutation\n\n\n\n\n\n","category":"type"},{"location":"#TightBindingLattice.SpaceOperation","page":"TightBindingLattice","title":"TightBindingLattice.SpaceOperation","text":"SpaceOperation{Tp<:Real, Tt<:Real}\n\nS: r ↦ M ⋅ ( r + R )\n\n\n\n\n\n","category":"type"},{"location":"#TightBindingLattice.SymmetryEmbedding","page":"TightBindingLattice","title":"TightBindingLattice.SymmetryEmbedding","text":"SymmetryEmbedding{SymmetryType<:AbstractSymmetry}\n\nMembers\n\nlattice::Lattice\nsymmetry::SymmetryType\nelements::Vector{SitePermutation}\n\n\n\n\n\n","category":"type"},{"location":"#TightBindingLattice.SymmorphicIrrepComponent","page":"TightBindingLattice","title":"TightBindingLattice.SymmorphicIrrepComponent","text":"SymmorphicIrrepComponent{S1<:SymmetryOrEmbedding, S2<:SymmetryOrEmbedding}\n\n\n\n\n\n","category":"type"},{"location":"#TightBindingLattice.SymmorphicSymmetry","page":"TightBindingLattice","title":"TightBindingLattice.SymmorphicSymmetry","text":"SymmorphicSymmetry{S1, S2, E}\n\n\n\n\n\n","category":"type"},{"location":"#TightBindingLattice.UnitCell","page":"TightBindingLattice","title":"TightBindingLattice.UnitCell","text":"UnitCell{O}\n\nParameters\n\nO: type of \"orbital\". Any type can be used, but we recommend using String or tuple of String and Int      for compatibility with JSON.\n\nMembers\n\nlatticevectors ::Array{Float64, 2}: Lattice vectors\nreducedreciprocallatticevectors ::Array{Float64, 2}: Reduced reciprocal lattice vectors (transpose of inverse of latticevectors)\nreciprocallatticevectors ::Array{Float64, 2}: Reciprocal lattice vectors. 2π * reducedreciprocallatticevectors\norbitals ::Vector{Tuple{T, FractCoord}}: List of orbitals within unit cell\norbitalindices ::Dict{T, Int}: Indices of orbitals\n\n\n\n\n\n","category":"type"},{"location":"#TightBindingLattice.addorbital!-Union{Tuple{O}, Tuple{UnitCell{O},O,FractCoord}} where O","page":"TightBindingLattice","title":"TightBindingLattice.addorbital!","text":"addorbital!\n\nAdd an orbital to the unit cell.\n\nArguments\n\nuc ::UnitCell{T}\norbitalname ::{T}\norbitalcoord ::FractCoord\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.apply_operation-Union{Tuple{S}, Tuple{IdentityOperation{S},AbstractArray{S,N} where N}} where S<:Real","page":"TightBindingLattice","title":"TightBindingLattice.apply_operation","text":"apply_operation(identity{S}, coordinate::AbstractArray{S}) where {S<:Real}\n\nDo nothing.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.apply_operation-Union{Tuple{S}, Tuple{PointOperation{S},AbstractArray{S,1}}} where S","page":"TightBindingLattice","title":"TightBindingLattice.apply_operation","text":"apply_operation(symop::PointOperation{S}, coordinate::AbstractArray{S}) where {S}\n\nApply point operation to the coordinates.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.apply_operation-Union{Tuple{S}, Tuple{TranslationOperation{S},AbstractArray{S,N} where N}} where S<:Real","page":"TightBindingLattice","title":"TightBindingLattice.apply_operation","text":"apply_operation(symop::TranslationOperation{S}, coordinate::AbstractArray{S}) where S\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.apply_operation-Union{Tuple{Tt}, Tuple{Tp}, Tuple{SpaceOperation{Tp,Tt},AbstractArray{#s38,N} where N where #s38<:Union{Tp, Tt}}} where Tt where Tp","page":"TightBindingLattice","title":"TightBindingLattice.apply_operation","text":"apply_operation(op::SpaceOperation{Tp, Tt}, coord::AbstractArray{<:Union{Tp, Tt}}) where {Tp, Tt}\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.carte2fract-Tuple{AbstractArray{#s27,2} where #s27<:Real,Array{Float64,1}}","page":"TightBindingLattice","title":"TightBindingLattice.carte2fract","text":"carte2fract\n\nArguments\n\nlatticevectors ::AbstractArray{<:AbstractFloat, 2}: square matrix whose columns are lattice vectors.\ncc ::CarteCoord: cartesian coordinates\ntol ::Real=Base.rtoldefault(Float64): tolerance\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.carte2fract-Tuple{UnitCell,Array{Float64,1}}","page":"TightBindingLattice","title":"TightBindingLattice.carte2fract","text":"carte2fract\n\nArguments\n\nlatticevectors ::Array{Float64, 2}\ncc ::CarteCoord\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.dimension-Tuple{FractCoord}","page":"TightBindingLattice","title":"TightBindingLattice.dimension","text":"dimension\n\nDimension of the fractional coordinates\n\nArguments\n\nfc ::FractCoord: Fractional coordinates.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.dimension-Tuple{UnitCell}","page":"TightBindingLattice","title":"TightBindingLattice.dimension","text":"dimension\n\nSpatial dimension of the unit cell.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.element-Tuple{FiniteGroup,Any}","page":"TightBindingLattice","title":"TightBindingLattice.element","text":"element(group, idx)\n\nReturn the element of index idx. For FiniteGroup, this is somewhat meaningless since the idxth element is idx. The sole purpose of this function is the bounds checking.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.element_name-Tuple{FiniteGroup,Any}","page":"TightBindingLattice","title":"TightBindingLattice.element_name","text":"element_name(group, idx)\n\nReturn the name of element at index idx, which is just the string of idx.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.element_names-Tuple{FiniteGroup}","page":"TightBindingLattice","title":"TightBindingLattice.element_names","text":"element_names(group)\n\nReturn the names of element.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.elements-Tuple{FiniteGroup}","page":"TightBindingLattice","title":"TightBindingLattice.elements","text":"elements(group)\n\nReturn the elements of the group.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.embed-Tuple{Lattice,PointOperation{#s91} where #s91<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.embed","text":"embed(lattice, point_operation)\n\nEmbed the simplest version of point operation. (no local unitary operation)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.embed-Tuple{Lattice,SpaceOperation{#s97,#s96} where #s96<:Integer where #s97<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.embed","text":"embed(lattice, sop::SpaceOperation{<:Integer, <:Integer})\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.embed-Tuple{Lattice,SymmorphicSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.embed","text":"embed(lattice::Lattice, ssym::SymmorphicSymmetry)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.embed-Tuple{Lattice,TranslationOperation{#s91} where #s91<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.embed","text":"embed(lattice, translation_operation)\n\nEmbed the simplest version of integer translation (no mapping between orbitals etc.)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.findorbitalindex-Tuple{UnitCell,FractCoord}","page":"TightBindingLattice","title":"TightBindingLattice.findorbitalindex","text":"findorbitalindex\n\nReturns (orbitalindex, unitcellvector), or (-1, []) if not found.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.findorbitalmap-Tuple{UnitCell,PointOperation{#s95} where #s95<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.findorbitalmap","text":"findorbitalmap(unitcell, point_operation)\n\nFind which orbital gets mapped to which orbital with what lattice displacement. Return a vector of tuples (j, Rj) at index i, representing that the orbital i gets mapped to orbital j with lattice displacement Rj.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.findorbitalmap-Tuple{UnitCell,PointSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.findorbitalmap","text":"findorbitalmap(unitcell, point_symmetry)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.findorbitalmap-Tuple{UnitCell,TranslationOperation{#s98} where #s98<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.findorbitalmap","text":"findorbitalmap(unitcell, translation_operation)\n\nFind which orbital gets mapped to which orbital with what lattice displacement. Return a vector of tuples (j, Rj) at index i, representing that the orbital i gets mapped to orbital j with lattice displacement Rj.\n\nThe overall transformation will be a combiation of (1) the result here, and (2) Bravais lattice transformation. Since all the integer translations will be taken care of by the Bravais lattice transformation, Rj here is all zero vectors.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.findorbitalmap-Tuple{UnitCell,TranslationSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.findorbitalmap","text":"findorbitalmap(unitcell, translation_symmetry)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.fract2carte-Tuple{AbstractArray{#s36,2} where #s36<:Real,FractCoord}","page":"TightBindingLattice","title":"TightBindingLattice.fract2carte","text":"fract2carte\n\nArguments\n\nlatticevectors ::AbstractArray{<:AbstractFloat, 2}: square matrix whose columns are lattice vectors.\nfc ::FractCoord: fractional coordinates\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.fract2carte-Tuple{UnitCell,FractCoord}","page":"TightBindingLattice","title":"TightBindingLattice.fract2carte","text":"fract2carte\n\nArguments\n\nlatticevectors ::Array{Float64, 2}\nfc ::FractCoord\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.generate_subgroup-Tuple{FiniteGroup,Integer}","page":"TightBindingLattice","title":"TightBindingLattice.generate_subgroup","text":"generate_subgroup(group, idx)\n\nsubgroup generated by generators. ⟨ {g} ⟩\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.generate_subgroup-Union{Tuple{G}, Tuple{FiniteGroup,G}} where G<:(Union{#s32, #s31} where #s31<:(AbstractArray{#s28,1} where #s28<:Integer) where #s32<:(AbstractSet{#s29} where #s29<:Integer))","page":"TightBindingLattice","title":"TightBindingLattice.generate_subgroup","text":"generate_subgroup(group, generators)\n\nsubgroup generated by generators. ⟨ S ⟩\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.generator_elements-Tuple{SymmorphicSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.generator_elements","text":"generator_elements(sym::SymmorphicSymmetry)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.generator_indices-Tuple{SymmorphicSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.generator_indices","text":"generator_indices(sym::SymmorphicSymmetry)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.get_irrep_components-Tuple{SymmorphicSymmetryEmbedding}","page":"TightBindingLattice","title":"TightBindingLattice.get_irrep_components","text":"get_irrep_components(sym::SymmorphicSymmetryEmbedding)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.get_irrep_components-Tuple{SymmorphicSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.get_irrep_components","text":"get_irrep_components(sym::SymmorphicSymmetry)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.get_irrep_components-Tuple{Union{#s99, #s98} where #s98<:AbstractSymmetryEmbedding where #s99<:AbstractSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.get_irrep_components","text":"get_irrep_components(sym::SymmetryOrEmbedding)\n\nReturn a generator which gives IrrepComponent(sym, irrep_index, irrep_component).\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.get_irrep_iterator-Tuple{IrrepComponent}","page":"TightBindingLattice","title":"TightBindingLattice.get_irrep_iterator","text":"get_irrep_iterator(sic::IrrepComponent)\n\nReturn a generator which gives (element, amplitude), where amplitude is the irrep component of element.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.get_irrep_iterator-Tuple{SymmorphicIrrepComponent}","page":"TightBindingLattice","title":"TightBindingLattice.get_irrep_iterator","text":"get_irrep_iterator(ssic::SymmorphicIrrepComponent)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.getorbital-Tuple{UnitCell,Integer}","page":"TightBindingLattice","title":"TightBindingLattice.getorbital","text":"getorbital\n\nArguments\n\nuc ::UnitCell{T}\nindex ::Integer\n\nReturn\n\n(orbitalname, fractcoord)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.getorbital-Union{Tuple{O}, Tuple{UnitCell{O},O}} where O","page":"TightBindingLattice","title":"TightBindingLattice.getorbital","text":"getorbital\n\nGet the orbital (its orbital name and its fractional coordinates) with the given name.\n\nArguments\n\nuc ::UnitCell{O}\nname ::O\n\nReturn\n\n(orbitalname, fractcoord)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.getorbitalcoord-Tuple{UnitCell,Integer}","page":"TightBindingLattice","title":"TightBindingLattice.getorbitalcoord","text":"getorbitalcoord\n\nArguments\n\nuc ::UnitCell\nidx ::Integer\n\nReturn\n\nfractcoord\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.getorbitalcoord-Union{Tuple{O}, Tuple{UnitCell{O},O}} where O","page":"TightBindingLattice","title":"TightBindingLattice.getorbitalcoord","text":"getorbitalcoord\n\nGet the fractional coordinates of the orbital with the given name.\n\nArguments\n\nuc ::UnitCell{O}\nname ::O\n\nReturn\n\nfractcoord\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.getorbitalindex-Union{Tuple{O}, Tuple{UnitCell{O},O}} where O","page":"TightBindingLattice","title":"TightBindingLattice.getorbitalindex","text":"getorbitalindex\n\nGet index of the given orbital.\n\nArguments\n\nuc ::UnitCell{O}\nname ::O\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.getorbitalindexcoord-Union{Tuple{O}, Tuple{UnitCell{O},O}} where O","page":"TightBindingLattice","title":"TightBindingLattice.getorbitalindexcoord","text":"getorbitalindexcoord\n\nArguments\n\nuc ::UnitCell{T}\nname ::T\n\nReturn\n\n(index, fractcoord)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.getorbitalname-Tuple{UnitCell,Integer}","page":"TightBindingLattice","title":"TightBindingLattice.getorbitalname","text":"getorbitalname\n\nArguments\n\nuc ::UnitCell\nindex ::Integer\n\nReturn\n\norbitalname\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.group_inverse-Tuple{FiniteGroup,Integer}","page":"TightBindingLattice","title":"TightBindingLattice.group_inverse","text":"group_inverse(group, g)\n\nGet inverse of element/elements g.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.group_inverse-Tuple{FiniteGroup}","page":"TightBindingLattice","title":"TightBindingLattice.group_inverse","text":"group_inverse(group)\n\nGet a function which gives inverse.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.group_isomorphism-Tuple{FiniteGroup,FiniteGroup}","page":"TightBindingLattice","title":"TightBindingLattice.group_isomorphism","text":"group_isomorphism(group1, group2)\n\nFind the isomorphism ϕ: G₁ → G₂. Return nothing if not isomorphic.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.group_multiplication_table-Tuple{FiniteGroup}","page":"TightBindingLattice","title":"TightBindingLattice.group_multiplication_table","text":"group_multiplication_table(group)\n\nReturn multiplcation table of the group.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.group_multiplication_table-Union{Tuple{AbstractArray{ElementType,1}}, Tuple{ElementType}, Tuple{AbstractArray{ElementType,1},Function}} where ElementType","page":"TightBindingLattice","title":"TightBindingLattice.group_multiplication_table","text":"group_multiplication_table(elements, product=(*))\n\nGenerate a multiplication table from elements with product.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.group_order-Tuple{FiniteGroup,Any}","page":"TightBindingLattice","title":"TightBindingLattice.group_order","text":"group_order(group, g)\n\nOrder of group element (i.e. period length)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.group_order-Tuple{FiniteGroup}","page":"TightBindingLattice","title":"TightBindingLattice.group_order","text":"group_order(group)\n\nOrder of group (i.e. number of elements)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.group_order-Tuple{IrrepComponent}","page":"TightBindingLattice","title":"TightBindingLattice.group_order","text":"group_order(sic::IrrepComponent)\n\nGet order of the symmetry group of sic.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.group_product-Tuple{FiniteGroup,Integer,Integer}","page":"TightBindingLattice","title":"TightBindingLattice.group_product","text":"group_product(group, lhs, rhs)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.group_product-Tuple{FiniteGroup}","page":"TightBindingLattice","title":"TightBindingLattice.group_product","text":"group_product(group)\n\nReturn a function which computes the group product.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.hasorbital-Union{Tuple{O}, Tuple{UnitCell{O},O}} where O","page":"TightBindingLattice","title":"TightBindingLattice.hasorbital","text":"hasorbital{T}\n\nTest whether the unit cell contains the orbital of given name.\n\nArguments\n\nuc ::UnitCell{O}\nname ::O\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.isabelian-Tuple{FiniteGroup}","page":"TightBindingLattice","title":"TightBindingLattice.isabelian","text":"isabelian(group)\n\nCheck if the group is abelian.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.isbragg-Tuple{AbstractArray{#s96,1} where #s96<:(Rational{#s95} where #s95<:Integer),AbstractArray{#s94,1} where #s94<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.isbragg","text":"isbragg(k, t)\n\nCheck for Bragg condition at momentum k and translation t. Fractional momentum is normalized to 1, i.e. lies within [0, 1)ⁿ\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.isbragg-Tuple{TranslationSymmetry,Integer,AbstractArray{#s97,1} where #s97<:(TranslationOperation{#s96} where #s96<:Integer)}","page":"TightBindingLattice","title":"TightBindingLattice.isbragg","text":"isbragg(tsym, tsym_irrep_index, translations)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.isbragg-Tuple{TranslationSymmetry,Integer,TranslationOperation{#s98} where #s98<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.isbragg","text":"isbragg(tsym, tsym_irrep_index, translation)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Tuple{IrrepComponent{TranslationSymmetry},PointSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(tsic, psym)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Tuple{Lattice,PointOperation{#s98} where #s98<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(lattice, point_operation)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Tuple{Lattice,PointSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(lattice, point_symmetry)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Tuple{Lattice,TranslationOperation{#s98} where #s98<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(lattice, translation_operation)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Tuple{Lattice,TranslationSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(lattice, translation_symmetry)\n\nTest whether lattice and the symmetry are compatible. For translation symmetry, this means that the hypercubic lattice for both are the same.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Tuple{OrthoCube,PointOperation{#s97} where #s97<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(orthocube, operator::PointOperation{<:Integer})\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Tuple{OrthoCube,PointSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(orthocube, symmetry::PointSymmetry)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Tuple{OrthoCube,TranslationOperation{#s98} where #s98<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(orthocube, operator::TranslationOperation{<:Integer})\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Tuple{OrthoCube,TranslationSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(orthocube, symmetry::TranslationSymmetry)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Tuple{PointSymmetry,TranslationSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(psym::PointSymmetry, tsym::TranslationSymmetry)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Tuple{SymmetryEmbedding{TranslationSymmetry},Integer,SymmetryEmbedding{PointSymmetry}}","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(tsymbed, tsym_irrep_index, psymbed)\n\nCheck whether the point symmetry embedding psymbed is compatible with the translation symmetry irrep defined by tsym_irrep_index and symmetry(tsymbed). In other words, the little group elements \n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Tuple{SymmetryEmbedding{TranslationSymmetry},SymmetryEmbedding{PointSymmetry}}","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(tsymbed, psymbed)\n\nCheck whether the point symmetry embedding psymbed is compatible with the translation symmetry embedding tsymbed, i.e. whether they have the same \"lattice\".\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Tuple{TranslationSymmetry,Integer,PointOperation{#s98} where #s98<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(tsym, tsym_irrep_index, point_operation)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Tuple{TranslationSymmetry,Integer,PointSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(tsym, tsym_irrep_index, psym)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Tuple{TranslationSymmetry,PointOperation{#s98} where #s98<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(tsym::TranslationSymmetry, pop::PointOperation{<:Integer})\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Tuple{TranslationSymmetry,PointSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(tsym::TranslationSymmetry, psym::PointSymmetry)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.iscompatible-Union{Tuple{E}, Tuple{S2}, Tuple{S1}, Tuple{Lattice,SymmorphicSymmetry{S1,S2,E}}} where E where S2 where S1","page":"TightBindingLattice","title":"TightBindingLattice.iscompatible","text":"iscompatible(lattice::Lattice, ssym::SymmorphicSymmetry{S1, S2, E}) where {S1, S2, E}\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.ishomomorphic-Tuple{FiniteGroup,AbstractArray{T,1} where T}","page":"TightBindingLattice","title":"TightBindingLattice.ishomomorphic","text":"ishomomorphic(group, representation; product=(*), equal=(==))\n\nCheck whether representation is homomorphic to group under product and equal, order preserved.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.issubgroup-Tuple{FiniteGroup,AbstractSet{#s38} where #s38<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.issubgroup","text":"issubgroup(group, subset)\n\nCheck whether the given subset is a subgroup of group.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.linpath-Tuple{Vararg{AbstractArray{T,1} where T,N} where N}","page":"TightBindingLattice","title":"TightBindingLattice.linpath","text":"momentumpath\n\nGenerate a list of momenta\n\nArguments\n\nanchorpoints\n(Optional) nseg - number of points in each segment\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.little_group-Tuple{IrrepComponent{TranslationSymmetry},PointSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.little_group","text":"little_group(tsic, psym)\n\nReturn the FiniteGroup object that corresponds to the little group of psym at tsic.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.little_group-Tuple{TranslationSymmetry,Integer,PointSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.little_group","text":"little_group(tsym, tsym_irrep_index, psym)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.little_group-Tuple{TranslationSymmetry,PointSymmetry,AbstractArray{#s94,1} where #s94<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.little_group","text":"little_group(tsym, psym, elements)\n\nGenerate a little group with given elements. The elements of the little group, which may be sparse, are compressed into consecutive integers.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.little_group_elements-Tuple{IrrepComponent{TranslationSymmetry},PointSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.little_group_elements","text":"little_group_elements(tsic, psym)\n\nGet the little group elements (i.e. indices) of psym corresponding to the irrep of translation symmetry specified by tsic. tsic and psym are either\n\nIrrepComponent{TranslationSymmetry} and PointSymmetry, or\nIrrepComponent{SymmetryEmbedding{TranslationSymmetry}} and SymmetryEmbedding{PointSymmetry}\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.little_group_elements-Tuple{SymmetryEmbedding{TranslationSymmetry},Integer,SymmetryEmbedding{PointSymmetry}}","page":"TightBindingLattice","title":"TightBindingLattice.little_group_elements","text":"little_group_elements(tsymbed, tsym_irrep_index, psymbed)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.little_group_elements-Tuple{SymmetryEmbedding{TranslationSymmetry},SymmetryEmbedding{PointSymmetry}}","page":"TightBindingLattice","title":"TightBindingLattice.little_group_elements","text":"little_group_elements(tsymbed, psymbed)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.little_group_elements-Tuple{TranslationSymmetry,Integer,PointSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.little_group_elements","text":"little_group_elements(tsym, tsym_irrep_index, psym)\n\nReturn elements of psym compatible with the translation symmetry tsym at  irrep tsym_irrep_index\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.little_group_elements-Tuple{TranslationSymmetry,PointSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.little_group_elements","text":"little_group_elements(tsym, psym)\n\nReturn elements of psym compatible with the translation symmetry tsym.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.little_symmetry-Tuple{IrrepComponent{TranslationSymmetry},PointSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.little_symmetry","text":"little_symmetry(tsic, psym)\n\nReturn the PointSymmetry object that corresponds to the little group of psym at tsic.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.little_symmetry-Tuple{SymmetryEmbedding{TranslationSymmetry},Integer,SymmetryEmbedding{PointSymmetry}}","page":"TightBindingLattice","title":"TightBindingLattice.little_symmetry","text":"little_symmetry(tsymbed, tsym_irrep_index, psymbed)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.little_symmetry-Tuple{SymmetryEmbedding{TranslationSymmetry},SymmetryEmbedding{PointSymmetry}}","page":"TightBindingLattice","title":"TightBindingLattice.little_symmetry","text":"little_symmetry(tsymbed, psymbed)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.little_symmetry-Tuple{TranslationSymmetry,Integer,PointSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.little_symmetry","text":"little_symmetry(tsym, tsym_irrep_index, psym)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.little_symmetry-Tuple{TranslationSymmetry,PointSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.little_symmetry","text":"little_symmetry(tsym, psym)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.little_symmetry_iso-Tuple{TranslationSymmetry,Integer,PointSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.little_symmetry_iso","text":"little_symmetry_iso(tsym, tsym_irrep_index, psym)\n\nFind little symmetry using group isomorphism\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.make_unitcell-Tuple{AbstractArray{#s33,2} where #s33<:Real}","page":"TightBindingLattice","title":"TightBindingLattice.make_unitcell","text":"UnitCell\n\nConstruct an n-dimensional lattice.\n\nArguments\n\nlatticevectors ::AbstractArray{<:AbstractFloat, 2}: Lattice vectors\nOrbitalType::DataType\n\nOptional Arguments\n\ntol=√ϵ: Epsilon\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.make_unitcell-Tuple{Real}","page":"TightBindingLattice","title":"TightBindingLattice.make_unitcell","text":"UnitCell\n\nConstruct a one-dimensional lattice.\n\nArguments\n\nlatticeconstant ::Float64: Lattice constant\nOrbitalType: List of orbitals\n\nOptional Arguments\n\ntol=√ϵ: Tolerance\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.minimal_generating_set-Tuple{FiniteGroup}","page":"TightBindingLattice","title":"TightBindingLattice.minimal_generating_set","text":"minimal_generating_set(group)\n\nGet minimally generating set of the finite group.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.momentumgrid-Tuple{UnitCell,AbstractArray{#s38,1} where #s38<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.momentumgrid","text":"momentumgrid\n\nGenerate an n-dimensional grid of momenta of given shape\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.numorbital-Tuple{UnitCell}","page":"TightBindingLattice","title":"TightBindingLattice.numorbital","text":"numorbital\n\nNumber of orbitals of the unit cell.\n\nArguments\n\nuc ::UnitCell\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.period_length-Tuple{FiniteGroup,Any}","page":"TightBindingLattice","title":"TightBindingLattice.period_length","text":"period_length(group, g)\n\nOrder of group element (i.e. period length)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.project-Tuple{PointSymmetry,AbstractArray{#s95,2} where #s95<:Integer}","page":"TightBindingLattice","title":"TightBindingLattice.project","text":"project(psym, projection; tol=√ϵ)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.read_point_symmetry-Tuple{AbstractDict}","page":"TightBindingLattice","title":"TightBindingLattice.read_point_symmetry","text":"read_point_symmetry(data::AbstractDict)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.symmetry_product-Tuple{PointSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.symmetry_product","text":"symmetry_product(psym::PointSymmetry)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.symmetry_product-Tuple{TranslationSymmetry}","page":"TightBindingLattice","title":"TightBindingLattice.symmetry_product","text":"symmetry_product(tsym::TranslationSymmetry)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.symmetry_product-Union{Tuple{SymmorphicSymmetry{TranslationSymmetry,PointSymmetry,S}}, Tuple{S}} where S<:(SpaceOperation{#s96,Tt} where Tt<:Real where #s96<:Integer)","page":"TightBindingLattice","title":"TightBindingLattice.symmetry_product","text":"symmetry_product(sym::SymmorphicSymmetry{TranslationSymmetry,PointSymmetry,S}) where {S<:SpaceOperation{<:Integer}}\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.translation_symmetry_embedding-Tuple{Lattice}","page":"TightBindingLattice","title":"TightBindingLattice.translation_symmetry_embedding","text":"translation_symmetry_embedding(lattice::Lattice)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.whichunitcell-Union{Tuple{O}, Tuple{UnitCell{O},O,Array{Float64,1}}} where O","page":"TightBindingLattice","title":"TightBindingLattice.whichunitcell","text":"whichunitcell\n\nReturn\n\nR ::Vector{Int}: which unit cell the specificied orbital/cartesian coordinates belongs to.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.whichunitcell-Union{Tuple{O}, Tuple{UnitCell{O},O,FractCoord}} where O","page":"TightBindingLattice","title":"TightBindingLattice.whichunitcell","text":"whichunitcell\n\nReturn\n\nR ::Vector{Int}: which unit cell the specificied orbital/cartesian coordinates belongs to.\n\n\n\n\n\n","category":"method"},{"location":"#Base.:*-Tuple{Permutation,Permutation}","page":"TightBindingLattice","title":"Base.:*","text":"    *(p1 ::Permutation, p2 ::Permutation)\n\nMultiply the two permutation. NOT THIS: (Return [p2.map[x] for x in p1.map].) BUT THIS: Return [p1.map[x] for x in p2.map].\n\nExamples\n\njulia> using TightBindingLattice\n\njulia> Permutation([2,1,3]) * Permutation([1,3,2])\nPermutation([2, 3, 1], 3)\n\njulia> Permutation([1,3,2]) * Permutation([2,1,3])\nPermutation([3, 1, 2], 3)\n\n\n\n\n\n","category":"method"},{"location":"#Base.:^-Tuple{Permutation,Integer}","page":"TightBindingLattice","title":"Base.:^","text":"^(perm ::Permutation, pow ::Integer)\n\nExponentiate the permutation.\n\nExamples\n\njulia> using TightBindingLattice\n\njulia> Permutation([2,3,4,1])^2\nPermutation([3, 4, 1, 2], 2)\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingLattice.conjugacy_class-Tuple{FiniteGroup,Integer}","page":"TightBindingLattice","title":"TightBindingLattice.conjugacy_class","text":"conjugacy_class(group, i)\n\nConjugacy class of the element i.\n\n\n\n\n\n","category":"method"}]
}
